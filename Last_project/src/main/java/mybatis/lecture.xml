<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="lecture.model.Lecture">
	
	<select id="getClassNameByLec" resultType="java.lang.String">
		
		select lec_name from lecture where lec_num = #{lec_num}
		
	</select>
	
	<update id="updateOngoingLecture">
		
		update going_class set link = #{link}, onoff = #{onoff} where lec_num = #{lec_num}
		
	</update>
	
	<!-- lecture 강좌 테이블 -->
	<select id="getLectureList" resultType="lecture.model.LectureBean">
		SELECT 
		    l.*, 
		    m1.name AS manager, 
		    m2.name AS teacher
		FROM 
		    lecture l
		    LEFT JOIN member m1 ON l.manager = m1.mem_num
		    LEFT JOIN member m2 ON l.teacher = m2.mem_num
		<if test="whatColumn=='all'">
		WHERE 
		    lec_name LIKE #{keyword} or m1.name LIKE #{keyword} or m2.name LIKE #{keyword}
		</if>
		<if test="whatColumn=='lec_name'">
		WHERE 
		    lec_name LIKE #{keyword}
		</if>
		<if test="whatColumn=='manager'">
		WHERE 
		    m1.name LIKE #{keyword}
		</if>
		<if test="whatColumn=='teacher'">
		WHERE 
		    m2.name LIKE #{keyword}
		</if>
		ORDER BY 
		    l.lec_num DESC
	</select>
	
	<select id="getTotalLecture" resultType="int">
		select count(*) from lecture 
		<if test="whatColumn=='all'">
		where lec_name like #{keyword} or teacher like #{keyword} or manager like #{keyword}
		</if>
		<if test="whatColumn=='lec_name'">
		where lec_name like #{keyword}
		</if>
		<if test="whatColumn=='manager'">
		where manager like #{keyword}
		</if>
		<if test="whatColumn=='teacher'">
		where teacher like #{keyword}
		</if>
	</select>
	
	<select id="getLectureByNum" resultType="lecture.model.LectureBean">
		select * from lecture where lec_num = #{lec_num}
	</select>
	
	<insert id="insertLecture">
		insert into lecture values(seq_lecture.nextval,#{lec_name},#{teacher},#{manager},TO_DATE(#{lec_start}, 'YYYY-MM-DD'),TO_DATE(#{lec_end}, 'YYYY-MM-DD'),#{stu_cnt},#{class_name})
	</insert> 
	
	<delete id="deleteLecture">
		delete from lecture where lec_num = #{lec_num}
  			
	</delete>
	
	<select id="getLectureByMemNum" resultType="lecture.model.LectureBean">
		select * from lecture where manager = #{mem_num} order by lec_num desc
	</select>
	
	<select id="getLectureByLec" resultType="lecture.model.On_going_lectureBean">
		
		select * from going_class where lec_num = #{lec_num}
		
	</select>
	
	<update id="updateLecture">
      update lecture set lec_name = #{lec_name}, teacher = #{teacher}, manager = #{manager}, 
      lec_start = #{lec_start}, lec_end = #{lec_end}, stu_cnt = #{stu_cnt}, class_name = #{class_name}
      where lec_num = #{lec_num}
   </update>
	
	<!-- 민곤추가 -->
	<delete id="deleteManagerFromLecture">
		delete from lecture where lec_num= #{lec_num} and manager = #{manager}
	</delete>
	
	<delete id="deleteTeacherFromLecture">
		delete from lecture where lec_num= #{lec_num} and teacher = #{teacher}
	</delete>
	
	<select id="getLectureByLecClass" parameterType="map" resultType="lecture.model.LectureBean">
    SELECT * FROM lecture
    <where>
        <if test="class_name != null and class_name != 'All'">
            class_name = #{class_name}
        </if>
    </where>
</select>
	
	<!-- 민곤추가 -->
	

	
	   <!-- 수호추가 -->
   <select id="getLectureByTeacher" resultType="java.lang.Integer">
       SELECT lec_num
       FROM lecture
       WHERE teacher = #{mem_num}
         AND sysdate BETWEEN lec_start AND lec_end
   </select>
   
      <insert id="insertGoingClass">
      insert into going_class (lec_num, onoff) values(seq_going.nextval, 'off')
   </insert>
   

	<select id="getLectureForManager" resultType="lecture.model.LectureBean">
		select * from lecture 
		where manager = #{mem_num} and lec_end >= SYSDATE 
		order by lec_start, lec_end
	</select>
	
	<select id="getLectureByClass1" resultType="lecture.model.LectureBean">
		SELECT *
	    FROM (
	        SELECT *
	        FROM lecture
	        WHERE class_name = #{class_name} AND SYSDATE >= lec_start and lec_end >= SYSDATE
	        ORDER BY lec_end
	    )
	    WHERE ROWNUM = 1
	</select>
	<select id="getLectureByClass2" resultType="lecture.model.LectureBean">
		SELECT *
	    FROM (
	        SELECT *
	        FROM lecture
	        WHERE class_name = #{class_name} AND lec_start > SYSDATE
	        ORDER BY lec_start
	    )
	    WHERE ROWNUM = 1
	</select>
	<select id="getLectureByClass3" resultType="lecture.model.LectureBean">
		SELECT *
	    FROM (
	        SELECT *
	        FROM lecture
	        WHERE class_name = #{class_name} AND SYSDATE > lec_end
	        ORDER BY lec_start
	    )
	    WHERE ROWNUM = 1
	</select>
	
	<select id="getLectureForTeacher" resultType="lecture.model.LectureBean">
		SELECT * from
		(select * from lecture where teacher = #{mem_num} and SYSDATE >= lec_start order by lec_start)
		where rownum = 1
	</select>

<select id="getLectureByManager" resultType="lecture.model.LectureBean">
      SELECT lec_num
       FROM lecture
       WHERE manager = #{mem_num}
         AND sysdate BETWEEN lec_start AND lec_end
   </select>
	
</mapper>