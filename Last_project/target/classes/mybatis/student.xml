<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="student.model.Student">
<!-- <insert id="studentReqInsert" parameterType="student.model.RequestBean">
   MERGE INTO request tgt 
    USING (SELECT #{app_num} AS app_num FROM dual) src
    ON (tgt.app_num = src.app_num)
    WHEN not MATCHED THEN
        INSERT (req_num, mem_num, app_num, category, time1, time2, reason, sign) 
        VALUES (seq_request.NEXTVAL, #{mem_num}, #{app_num}, #{category}, #{time1}, #{time2}, #{reason}, #{sign})
</insert> -->
<!--MERGE문을 사용하여 조건문이 있어도 insert를 사용할 수 있게한다  근데 app_num이 중복이면 더 안들어간다...실패-->

  <!-- select att_num / 조건 : mem_num, ip 내림차순 정렬(att_num) 최상단(가장 나중에 insert한 att_num 하나만 가져온다 -->
	<select id="getAttendPrimaryKey" resultType="student.model.AttendBean">
		select att_num from attend where mem_num = #{mem_num} and ip = #{mem_ip} order by att_num desc FETCH FIRST 1 ROW ONLY
	</select>
	
	<select id="getAttendListByAtt_num" resultType="student.model.AttendBean">
		select * from attend where att_num = #{att_num}
	</select>

	<insert id="insertCheck" parameterType="map">
		INSERT INTO attend (att_num, mem_num, day, att_sdate, att_fdate, study_time, situ, ip)
		VALUES (seq_attend.nextval, #{mem_num}, trunc(sysdate), systimestamp, null ,0, '수업중', #{mem_ip})
	</insert>

	<update id="updateFdate" parameterType="int">
    UPDATE attend 
    SET att_fdate = systimestamp 
    WHERE att_num = #{att_num}
  </update>

  <select id="getRunningTime" resultType="int" parameterType="map">
    select round((#{att_fdate} - #{att_sdate}) * 24 * 60)from attend where att_num = #{att_num}
  </select>
     
  <select id="transFormSdate" parameterType="map" resultType="int">
    SELECT HOUR(#{new_sdate}) * 100 + MINUTE(#{new_sdate}) 
    FROM attend 
    WHERE att_num = #{att_num}
  </select>

  <select id="transFormFdate" parameterType="map" resultType="int">
    SELECT HOUR(#{new_fdate}) * 100 + MINUTE(#{new_fdate}) 
    FROM attend 
    WHERE att_num = #{att_num}
  </select>
    
<!--
 	<select id="transFormSdate" resultType="int">
      select to_number(to_char(to_date(#{new_sdate}, 'YYYY-MM-DD HH24:MI:SS'), 'HH24MI'))
      from attend where att_num = #{att_num}
  </select>
  
  <select id="transFormFdate" resultType="int">
      select to_number(to_char(to_date(#{new_fdate}, 'YYYY-MM-DD HH24:MI:SS'), 'HH24MI'))
      from attend where att_num = #{att_num}
  </select>
 -->
 
  <update id="updateSitu">
    update attend set situ = 
    <choose>
        <when test="condition == 'attend'"> '출석' </when>
        <when test="condition == 'late'"> '지각' </when>
        <when test="condition == 'leave'"> '조퇴' </when>
        <when test="condition == 'absence'"> '결석' </when>
    </choose>
    where att_num = #{att_num}
  </update>
  
  <insert id="studentReqInsert">
		insert into request values(req_seq.nextval, #{mem_num}, #{category}, #{time1}, #{time2}, #{reason}, #{sign})
	</insert>
    
</mapper>